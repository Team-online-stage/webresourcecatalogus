openapi: 3.0.2
info:
  title: 'Web Resource Component'
  version: V1.0
  description: |
    API Details
    - Component: Web Resource Component
    - Reference: wrc
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/webresourcecatalogus) / [zip](https://github.com/ConductionNL/webresourcecatalogus/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/wrc-php) 
    - Datamodel: [postman](/schema/wrc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  '/adresses/{id}/audit_trail':
    get:
      tags:
        - Style
      operationId: get_audit_trailStyleItem
      summary: 'Retrieves a Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Style resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/adresses/{id}/change_log':
    get:
      tags:
        - Style
      operationId: get_change_logsStyleItem
      summary: 'Retrieves a Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Style resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[domain]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: domain
          in: query
          required: false
          schema:
            type: string
        -
          name: 'domain[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}/audit_trail':
    get:
      tags:
        - Application
      operationId: get_audit_trailApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/applications/{id}/change_log':
    get:
      tags:
        - Application
      operationId: get_change_logsApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/applications/{id}/{slug}':
    get:
      tags:
        - Application
      operationId: get_page_on_slugApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[domain]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: domain
          in: query
          required: false
          schema:
            type: string
        -
          name: 'domain[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /configurations:
    get:
      tags:
        - Configuration
      operationId: getConfigurationCollection
      summary: 'Retrieves the collection of Configuration resources.'
      responses:
        200:
          description: 'Configuration collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Configuration:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Configuration:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Configuration-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[configuration]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Configuration
      operationId: postConfigurationCollection
      summary: 'Creates a Configuration resource.'
      responses:
        201:
          description: 'Configuration resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Configuration-read'
          links:
            GetConfigurationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getConfigurationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /configurations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Configuration:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Configuration:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Configuration-write'
        description: 'The new Configuration resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/configurations/{id}':
    get:
      tags:
        - Configuration
      operationId: getConfigurationItem
      summary: 'Retrieves a Configuration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Configuration resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Configuration-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Configuration
      operationId: putConfigurationItem
      summary: 'Replaces the Configuration resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Configuration resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Configuration:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Configuration-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Configuration-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Configuration:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Configuration:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Configuration-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Configuration-write'
        description: 'The updated Configuration resource'
    delete:
      tags:
        - Configuration
      operationId: deleteConfigurationItem
      summary: 'Removes the Configuration resource.'
      responses:
        204:
          description: 'Configuration resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /images:
    get:
      tags:
        - Image
      operationId: getImageCollection
      summary: 'Retrieves the collection of Image resources.'
      responses:
        200:
          description: 'Image collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Image:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Image:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[alt]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[href]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[base64]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: alt
          in: query
          required: false
          schema:
            type: string
        -
          name: 'alt[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: href
          in: query
          required: false
          schema:
            type: string
        -
          name: 'href[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: base64
          in: query
          required: false
          schema:
            type: string
        -
          name: 'base64[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Image
      operationId: postImageCollection
      summary: 'Creates a Image resource.'
      responses:
        201:
          description: 'Image resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
          links:
            GetImageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getImageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /images/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Image-write'
        description: 'The new Image resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/images/{id}':
    get:
      tags:
        - Image
      operationId: getImageItem
      summary: 'Retrieves a Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Image resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Image
      operationId: putImageItem
      summary: 'Replaces the Image resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Image resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Image:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Image-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Image-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Image-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Image:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Image-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Image-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Image-write'
        description: 'The updated Image resource'
    delete:
      tags:
        - Image
      operationId: deleteImageItem
      summary: 'Removes the Image resource.'
      responses:
        204:
          description: 'Image resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /login_logs:
    get:
      tags:
        - LoginLog
      operationId: getLoginLogCollection
      summary: 'Retrieves the collection of LoginLog resources.'
      responses:
        200:
          description: 'LoginLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LoginLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LoginLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[address]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[method]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          required: false
          schema:
            type: string
        -
          name: 'address[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: method
          in: query
          required: false
          schema:
            type: string
        -
          name: 'method[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: status
          in: query
          required: false
          schema:
            type: string
        -
          name: 'status[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - LoginLog
      operationId: postLoginLogCollection
      summary: 'Creates a LoginLog resource.'
      responses:
        201:
          description: 'LoginLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
          links:
            GetLoginLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getLoginLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /login_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LoginLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LoginLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
        description: 'The new LoginLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/login_logs/{id}':
    get:
      tags:
        - LoginLog
      operationId: getLoginLogItem
      summary: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'LoginLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - LoginLog
      operationId: putLoginLogItem
      summary: 'Replaces the LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'LoginLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LoginLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LoginLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
        description: 'The updated LoginLog resource'
    delete:
      tags:
        - LoginLog
      operationId: deleteLoginLogItem
      summary: 'Removes the LoginLog resource.'
      responses:
        204:
          description: 'LoginLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/login_logs/{id}/audit_trail':
    get:
      tags:
        - LoginLog
      operationId: get_audit_trailLoginLogItem
      summary: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'LoginLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/login_logs/{id}/change_log':
    get:
      tags:
        - LoginLog
      operationId: get_change_logsLoginLogItem
      summary: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'LoginLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /menu_items:
    get:
      tags:
        - MenuItem
      operationId: getMenuItemCollection
      summary: 'Retrieves the collection of MenuItem resources.'
      responses:
        200:
          description: 'MenuItem collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MenuItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/MenuItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[order]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[icon]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[href]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: order
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'order[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: icon
          in: query
          required: false
          schema:
            type: string
        -
          name: 'icon[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: href
          in: query
          required: false
          schema:
            type: string
        -
          name: 'href[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - MenuItem
      operationId: postMenuItemCollection
      summary: 'Creates a MenuItem resource.'
      responses:
        201:
          description: 'MenuItem resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
          links:
            GetMenuItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menu_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
        description: 'The new MenuItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/menu_items/{id}':
    get:
      tags:
        - MenuItem
      operationId: getMenuItemItem
      summary: 'Retrieves a MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'MenuItem resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - MenuItem
      operationId: putMenuItemItem
      summary: 'Replaces the MenuItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'MenuItem resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/MenuItem:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/MenuItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/MenuItem:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/MenuItem-write'
        description: 'The updated MenuItem resource'
    delete:
      tags:
        - MenuItem
      operationId: deleteMenuItemItem
      summary: 'Removes the MenuItem resource.'
      responses:
        204:
          description: 'MenuItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /menus:
    get:
      tags:
        - Menu
      operationId: getMenuCollection
      summary: 'Retrieves the collection of Menu resources.'
      responses:
        200:
          description: 'Menu collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Menu:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Menu:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Menu
      operationId: postMenuCollection
      summary: 'Creates a Menu resource.'
      responses:
        201:
          description: 'Menu resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
          links:
            GetMenuItem:
              parameters:
                id: '$response.body#/id'
              operationId: getMenuItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /menus/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Menu-write'
        description: 'The new Menu resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/menus/{id}':
    get:
      tags:
        - Menu
      operationId: getMenuItem
      summary: 'Retrieves a Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Menu resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Menu
      operationId: putMenuItem
      summary: 'Replaces the Menu resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Menu resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Menu:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Menu-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Menu-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Menu:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Menu-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Menu-write'
        description: 'The updated Menu resource'
    delete:
      tags:
        - Menu
      operationId: deleteMenuItem
      summary: 'Removes the Menu resource.'
      responses:
        204:
          description: 'Menu resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[rsin]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[chamberOfComerce]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contact]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: rsin
          in: query
          required: false
          schema:
            type: string
        -
          name: 'rsin[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: chamberOfComerce
          in: query
          required: false
          schema:
            type: string
        -
          name: 'chamberOfComerce[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: contact
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contact[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /slugs:
    get:
      tags:
        - Slug
      operationId: getSlugCollection
      summary: 'Retrieves the collection of Slug resources.'
      responses:
        200:
          description: 'Slug collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Slug:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Slug:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Slug-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[slug]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: template.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'template.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slug
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slug[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Slug
      operationId: postSlugCollection
      summary: 'Creates a Slug resource.'
      responses:
        201:
          description: 'Slug resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
          links:
            GetSlugItem:
              parameters:
                id: '$response.body#/id'
              operationId: getSlugItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /slugs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Slug-write'
        description: 'The new Slug resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/slugs/{id}':
    get:
      tags:
        - Slug
      operationId: getSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Slug
      operationId: putSlugItem
      summary: 'Replaces the Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Slug resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Slug:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Slug-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Slug-write'
        description: 'The updated Slug resource'
    delete:
      tags:
        - Slug
      operationId: deleteSlugItem
      summary: 'Removes the Slug resource.'
      responses:
        204:
          description: 'Slug resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/slugs/{id}/audit_trail':
    get:
      tags:
        - Slug
      operationId: get_audit_trailSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/slugs/{id}/change_log':
    get:
      tags:
        - Slug
      operationId: get_change_logsSlugItem
      summary: 'Retrieves a Slug resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Slug resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Slug:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Slug-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Slug-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /styles:
    get:
      tags:
        - Style
      operationId: getStyleCollection
      summary: 'Retrieves the collection of Style resources.'
      responses:
        200:
          description: 'Style collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Style:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Style:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Style-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[css]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: css
          in: query
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Style
      operationId: postStyleCollection
      summary: 'Creates a Style resource.'
      responses:
        201:
          description: 'Style resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
          links:
            GetStyleItem:
              parameters:
                id: '$response.body#/id'
              operationId: getStyleItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /styles/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Style-write'
        description: 'The new Style resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/styles/{id}':
    get:
      tags:
        - Style
      operationId: getStyleItem
      summary: 'Retrieves a Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Style resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Style
      operationId: putStyleItem
      summary: 'Replaces the Style resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Style resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Style:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Style-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Style-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Style-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Style:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Style-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Style-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Style-write'
        description: 'The updated Style resource'
    delete:
      tags:
        - Style
      operationId: deleteStyleItem
      summary: 'Removes the Style resource.'
      responses:
        204:
          description: 'Style resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /template_groups:
    get:
      tags:
        - TemplateGroup
      operationId: getTemplateGroupCollection
      summary: 'Retrieves the collection of TemplateGroup resources.'
      responses:
        200:
          description: 'TemplateGroup collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TemplateGroup:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/TemplateGroup:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TemplateGroup-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - TemplateGroup
      operationId: postTemplateGroupCollection
      summary: 'Creates a TemplateGroup resource.'
      responses:
        201:
          description: 'TemplateGroup resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
          links:
            GetTemplateGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /template_groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TemplateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
        description: 'The new TemplateGroup resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/template_groups/{id}':
    get:
      tags:
        - TemplateGroup
      operationId: getTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - TemplateGroup
      operationId: putTemplateGroupItem
      summary: 'Replaces the TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'TemplateGroup resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/TemplateGroup:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
          text/html:
            schema:
              $ref: '#/components/schemas/TemplateGroup-write'
        description: 'The updated TemplateGroup resource'
    delete:
      tags:
        - TemplateGroup
      operationId: deleteTemplateGroupItem
      summary: 'Removes the TemplateGroup resource.'
      responses:
        204:
          description: 'TemplateGroup resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/template_groups/{id}/audit_trail':
    get:
      tags:
        - TemplateGroup
      operationId: get_audit_trailTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/template_groups/{id}/change_log':
    get:
      tags:
        - TemplateGroup
      operationId: get_change_logsTemplateGroupItem
      summary: 'Retrieves a TemplateGroup resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'TemplateGroup resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/TemplateGroup:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
            text/html:
              schema:
                $ref: '#/components/schemas/TemplateGroup-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  /templates:
    get:
      tags:
        - Template
      operationId: getTemplateCollection
      summary: 'Retrieves the collection of Template resources.'
      responses:
        200:
          description: 'Template collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Template:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Template:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[title]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[templateEngine]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: application.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'application.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: organization.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'organization.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slugs.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slugs.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: templateEngine
          in: query
          required: false
          schema:
            type: string
        -
          name: 'templateEngine[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: slugs.slug
          in: query
          required: false
          schema:
            type: string
        -
          name: 'slugs.slug[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: title
          in: query
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: templateGroups.name
          in: query
          required: false
          schema:
            type: string
        -
          name: templateGroups.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'templateGroups.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Template
      operationId: postTemplateCollection
      summary: 'Creates a Template resource.'
      responses:
        201:
          description: 'Template resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
          links:
            GetTemplateItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /templates/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Template-write'
        description: 'The new Template resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/templates/{id}':
    get:
      tags:
        - Template
      operationId: getTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Template
      operationId: putTemplateItem
      summary: 'Replaces the Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Template resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Template-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Template-write'
        description: 'The updated Template resource'
    delete:
      tags:
        - Template
      operationId: deleteTemplateItem
      summary: 'Removes the Template resource.'
      responses:
        204:
          description: 'Template resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/templates/{id}/audit_trail':
    get:
      tags:
        - Template
      operationId: get_audit_trailTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/templates/{id}/change_log':
    get:
      tags:
        - Template
      operationId: get_change_logsTemplateItem
      summary: 'Retrieves a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Template resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Template-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Template-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
  '/templates/{id}/render':
    post:
      tags:
        - Template
      operationId: render_templateTemplateItem
      summary: 'Creates a Template resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        201:
          description: 'Template resource created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Template:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.ms-word:
              schema:
                $ref: '#/components/schemas/Template-read'
            application/vnd.openxmlformats-officedocument.wordprocessing:
              schema:
                $ref: '#/components/schemas/Template-read'
          links:
            GetTemplateItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTemplateItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /templates/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Template:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/pdf:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/vnd.ms-word:
            schema:
              $ref: '#/components/schemas/Template-write'
          application/vnd.openxmlformats-officedocument.wordprocessing:
            schema:
              $ref: '#/components/schemas/Template-write'
        description: 'The new Template resource'
security:
  -
    apiKey: []
components:
  schemas:
    Application-read:
      type: object
      description: 'Application is the project of a website.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        domain:
          description: 'The domain of this application.'
          type: string
        organization:
          $ref: '#/components/schemas/Organization-read'
        defaultConfiguration:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Configuration-read'
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
        - domain
        - organization
    Application-write:
      type: object
      description: 'Application is the project of a website.'
      required:
        - name
        - description
        - domain
        - organization
      properties:
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        domain:
          description: 'The domain of this application.'
          type: string
        organization:
          $ref: '#/components/schemas/Organization-write'
        defaultConfiguration:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Configuration-write'
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style-write'
    'Application:jsonld-read':
      type: object
      description: 'Application is the project of a website.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        domain:
          description: 'The domain of this application.'
          type: string
        organization:
          $ref: '#/components/schemas/Organization:jsonld-read'
        defaultConfiguration:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Configuration:jsonld-read'
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
        - domain
        - organization
    'Application:jsonld-write':
      type: object
      description: 'Application is the project of a website.'
      required:
        - name
        - description
        - domain
        - organization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this application.'
          type: string
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        domain:
          description: 'The domain of this application.'
          type: string
        organization:
          $ref: '#/components/schemas/Organization:jsonld-write'
        defaultConfiguration:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Configuration:jsonld-write'
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Configuration-read:
      type: object
      description: 'Configurations hold a specific organisation configruation for an application.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this application.'
          type: string
          nullable: true
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-read'
        configuration:
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    Configuration-write:
      type: object
      description: 'Configurations hold a specific organisation configruation for an application.'
      required:
        - name
        - description
        - organization
      properties:
        name:
          description: 'The name of this application.'
          type: string
          nullable: true
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-write'
        organization:
          $ref: '#/components/schemas/Organization-write'
        configuration:
          type: array
          items:
            type: string
    'Configuration:jsonld-read':
      type: object
      description: 'Configurations hold a specific organisation configruation for an application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this application.'
          type: string
          nullable: true
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-read'
        configuration:
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    'Configuration:jsonld-write':
      type: object
      description: 'Configurations hold a specific organisation configruation for an application.'
      required:
        - name
        - description
        - organization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this application.'
          type: string
          nullable: true
        description:
          description: 'The description of this application.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-write'
        organization:
          $ref: '#/components/schemas/Organization:jsonld-write'
        configuration:
          type: array
          items:
            type: string
    Image-read:
      type: object
      description: 'Image speaks for itself.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
          nullable: true
        href:
          description: 'The href of this image'
          type: string
          nullable: true
        base64:
          type: string
          nullable: true
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    Image-write:
      type: object
      description: 'Image speaks for itself.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
          nullable: true
        href:
          description: 'The href of this image'
          type: string
          nullable: true
        base64:
          type: string
          nullable: true
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
    'Image:jsonld-read':
      type: object
      description: 'Image speaks for itself.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
          nullable: true
        href:
          description: 'The href of this image'
          type: string
          nullable: true
        base64:
          type: string
          nullable: true
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    'Image:jsonld-write':
      type: object
      description: 'Image speaks for itself.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this image'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
        alt:
          description: 'The alt of of this image for people with poor eyesight'
          type: string
          nullable: true
        href:
          description: 'The href of this image'
          type: string
          nullable: true
        base64:
          type: string
          nullable: true
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-write'
    LoginLog-read:
      type: object
      description: 'An entity representing an login log.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        address:
          description: 'The ip address of the login'
          type: string
        method:
          description: 'The method of the login'
          type: string
        status:
          description: 'the status code of the login'
          type: string
        dateCreated:
          writeOnly: true
          description: 'The moment this login was made'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this login was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - address
        - method
        - status
    LoginLog-write:
      type: object
      description: 'An entity representing an login log.'
      required:
        - address
        - method
        - status
      properties:
        address:
          description: 'The ip address of the login'
          type: string
        method:
          description: 'The method of the login'
          type: string
        status:
          description: 'the status code of the login'
          type: string
    'LoginLog:jsonld-read':
      type: object
      description: 'An entity representing an login log.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        address:
          description: 'The ip address of the login'
          type: string
        method:
          description: 'The method of the login'
          type: string
        status:
          description: 'the status code of the login'
          type: string
        dateCreated:
          writeOnly: true
          description: 'The moment this login was made'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this login was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - address
        - method
        - status
    'LoginLog:jsonld-write':
      type: object
      description: 'An entity representing an login log.'
      required:
        - address
        - method
        - status
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        address:
          description: 'The ip address of the login'
          type: string
        method:
          description: 'The method of the login'
          type: string
        status:
          description: 'the status code of the login'
          type: string
    Menu-read:
      type: object
      description: 'Menu is your way of navigation inside your application.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this menuItems'
          type: string
          nullable: true
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem-read'
        application:
          $ref: '#/components/schemas/Application-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - application
    Menu-write:
      type: object
      description: 'Menu is your way of navigation inside your application.'
      required:
        - name
        - application
      properties:
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this menuItems'
          type: string
          nullable: true
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem-write'
        application:
          $ref: '#/components/schemas/Application-write'
    'Menu:jsonld-read':
      type: object
      description: 'Menu is your way of navigation inside your application.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this menuItems'
          type: string
          nullable: true
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem:jsonld-read'
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - application
    'Menu:jsonld-write':
      type: object
      description: 'Menu is your way of navigation inside your application.'
      required:
        - name
        - application
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this menuItems'
          type: string
          nullable: true
        menuItems:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem:jsonld-write'
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
    MenuItem-read:
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
          type: integer
          nullable: true
        icon:
          description: 'the icon to display with this menu item'
          type: string
          nullable: true
        type:
          description: 'the type of the menu item'
          type: string
          nullable: true
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - order
        - href
    MenuItem-write:
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      required:
        - name
        - order
        - href
        - menu
      properties:
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
          type: integer
          nullable: true
        icon:
          description: 'the icon to display with this menu item'
          type: string
          nullable: true
        type:
          description: 'the type of the menu item'
          type: string
          nullable: true
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu-write'
    'MenuItem:jsonld-read':
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
          type: integer
          nullable: true
        icon:
          description: 'the icon to display with this menu item'
          type: string
          nullable: true
        type:
          description: 'the type of the menu item'
          type: string
          nullable: true
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - order
        - href
    'MenuItem:jsonld-write':
      type: object
      description: 'MenuItem is a part of a menu and can be a link or submenu.'
      required:
        - name
        - order
        - href
        - menu
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this MenuItem'
          type: string
        description:
          description: 'The description of this MenuItem'
          type: string
          nullable: true
        order:
          description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
          type: integer
          nullable: true
        icon:
          description: 'the icon to display with this menu item'
          type: string
          nullable: true
        type:
          description: 'the type of the menu item'
          type: string
          nullable: true
        href:
          description: 'The href of this MenuItem that links to another page'
          type: string
        menu:
          $ref: '#/components/schemas/Menu:jsonld-write'
    Organization-read:
      type: object
      description: 'An organization as active on commonground.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        rsin:
          description: 'The rsin of this organisations.'
          type: string
          nullable: true
        chamberOfComerce:
          description: 'The Chamber of Comerce ID of this organisations.'
          type: string
          nullable: true
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
          nullable: true
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        contact:
          description: 'The contact information for this organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - rsin
        - chamberOfComerce
        - name
    Organization-write:
      type: object
      description: 'An organization as active on commonground.'
      required:
        - rsin
        - chamberOfComerce
        - name
      properties:
        rsin:
          description: 'The rsin of this organisations.'
          type: string
          nullable: true
        chamberOfComerce:
          description: 'The Chamber of Comerce ID of this organisations.'
          type: string
          nullable: true
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
          nullable: true
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style-write'
        contact:
          description: 'The contact information for this organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    'Organization:jsonld-read':
      type: object
      description: 'An organization as active on commonground.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        rsin:
          description: 'The rsin of this organisations.'
          type: string
          nullable: true
        chamberOfComerce:
          description: 'The Chamber of Comerce ID of this organisations.'
          type: string
          nullable: true
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
          nullable: true
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        contact:
          description: 'The contact information for this organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
      required:
        - rsin
        - chamberOfComerce
        - name
    'Organization:jsonld-write':
      type: object
      description: 'An organization as active on commonground.'
      required:
        - rsin
        - chamberOfComerce
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        rsin:
          description: 'The rsin of this organisations.'
          type: string
          nullable: true
        chamberOfComerce:
          description: 'The Chamber of Comerce ID of this organisations.'
          type: string
          nullable: true
        name:
          description: 'The name of this organization.'
          type: string
        description:
          description: 'The description of this organisation.'
          type: string
          nullable: true
        style:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Style:jsonld-write'
        contact:
          description: 'The contact information for this organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
    Slug-read:
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this slug.'
          type: string
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-read'
        template:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Template-read'
        slug:
          description: 'The actual slug of this slug without a pre / e.g. about not about'
          type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - slug
    Slug-write:
      type: object
      description: 'Your slug connects your application with your pages.'
      required:
        - name
        - slug
      properties:
        name:
          description: 'The internal name of this slug.'
          type: string
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-write'
        template:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Template-write'
        slug:
          description: 'The actual slug of this slug without a pre / e.g. about not about'
          type: string
    'Slug:jsonld-read':
      type: object
      description: 'Your slug connects your application with your pages.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this slug.'
          type: string
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-read'
        template:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Template:jsonld-read'
        slug:
          description: 'The actual slug of this slug without a pre / e.g. about not about'
          type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - slug
    'Slug:jsonld-write':
      type: object
      description: 'Your slug connects your application with your pages.'
      required:
        - name
        - slug
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The internal name of this slug.'
          type: string
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-write'
        template:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Template:jsonld-write'
        slug:
          description: 'The actual slug of this slug without a pre / e.g. about not about'
          type: string
    Style-read:
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image-read'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    Style-write:
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image-write'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization-write'
    'Style:jsonld-read':
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image:jsonld-read'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    'Style:jsonld-write':
      type: object
      description: 'Your style provides ccs and a favicon for an organisation.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this style.'
          type: string
        description:
          description: 'The description of this style.'
          type: string
        css:
          type: string
        favicon:
          $ref: '#/components/schemas/Image:jsonld-write'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization:jsonld-write'
    Template-read:
      type: object
      description: 'Templates holds information your pages or include in messages.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this menu'
          type: string
        title:
          description: 'The external name of this menu'
          type: string
          nullable: true
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        content:
          description: 'The Content of this template.'
          type: string
        variables:
          description: 'Optional variables ussed during rendering'
          type: array
          items:
            type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
          type: string
        slugs:
          type: array
          items:
            $ref: '#/components/schemas/Slug-read'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        templateGroups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateGroup-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
        - content
        - templateEngine
    Template-write:
      type: object
      description: 'Templates holds information your pages or include in messages.'
      required:
        - name
        - description
        - content
        - templateEngine
      properties:
        name:
          description: 'The internal name of this menu'
          type: string
        title:
          description: 'The external name of this menu'
          type: string
          nullable: true
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        createSlug:
          description: 'Whether to auto create a slug on creation of this template'
          type: boolean
        content:
          description: 'The Content of this template.'
          type: string
        variables:
          description: 'Optional variables ussed during rendering'
          type: array
          items:
            type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
          type: string
        slugs:
          type: array
          items:
            $ref: '#/components/schemas/Slug-write'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
        templateGroups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateGroup-write'
    'Template:jsonld-read':
      type: object
      description: 'Templates holds information your pages or include in messages.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this menu'
          type: string
        title:
          description: 'The external name of this menu'
          type: string
          nullable: true
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        content:
          description: 'The Content of this template.'
          type: string
        variables:
          description: 'Optional variables ussed during rendering'
          type: array
          items:
            type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
          type: string
        slugs:
          type: array
          items:
            $ref: '#/components/schemas/Slug:jsonld-read'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-read'
        templateGroups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateGroup:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
        - content
        - templateEngine
    'Template:jsonld-write':
      type: object
      description: 'Templates holds information your pages or include in messages.'
      required:
        - name
        - description
        - content
        - templateEngine
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The internal name of this menu'
          type: string
        title:
          description: 'The external name of this menu'
          type: string
          nullable: true
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        createSlug:
          description: 'Whether to auto create a slug on creation of this template'
          type: boolean
        content:
          description: 'The Content of this template.'
          type: string
        variables:
          description: 'Optional variables ussed during rendering'
          type: array
          items:
            type: string
        templateEngine:
          description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
          type: string
        slugs:
          type: array
          items:
            $ref: '#/components/schemas/Slug:jsonld-write'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-write'
        templateGroups:
          type: array
          items:
            $ref: '#/components/schemas/TemplateGroup:jsonld-write'
    TemplateGroup-read:
      type: object
      description: 'Groups are a way of orginzing templates.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-read'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    TemplateGroup-write:
      type: object
      description: 'Groups are a way of orginzing templates.'
      required:
        - name
        - description
      properties:
        name:
          description: 'The internal name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template-write'
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-write'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization-write'
    'TemplateGroup:jsonld-read':
      type: object
      description: 'Groups are a way of orginzing templates.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The internal name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-read'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - description
    'TemplateGroup:jsonld-write':
      type: object
      description: 'Groups are a way of orginzing templates.'
      required:
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The internal name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
          nullable: true
        templates:
          type: array
          items:
            $ref: '#/components/schemas/Template:jsonld-write'
        application:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application:jsonld-write'
        organization:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Organization:jsonld-write'
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      description: 'Value for the Authorization header'
      name: Authorization
definitions:
  Application-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      domain:
        description: 'The domain of this application.'
        type: string
        example: 'https://www.example.org'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      organization: []
      defaultConfiguration: []
      style: []
    required:
      - name
      - description
      - domain
      - organization
  Application-write:
    properties:
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      domain:
        description: 'The domain of this application.'
        type: string
        example: 'https://www.example.org'
        maxLength: 255
      organization: []
      defaultConfiguration: []
      style: []
    required:
      - name
      - description
      - domain
      - organization
  Organization-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        example: About
        maxLength: 255
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        example: About
        maxLength: 255
      name:
        description: 'The name of this organization.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      contact:
        description: 'The contact information for this organization'
        type: string
        format: url
        maxLength: 255
      style: []
    required:
      - rsin
      - chamberOfComerce
      - name
  Organization-write:
    properties:
      rsin:
        description: 'The rsin of this organisations.'
        type: string
        example: About
        maxLength: 255
      chamberOfComerce:
        description: 'The Chamber of Comerce ID of this organisations.'
        type: string
        example: About
        maxLength: 255
      name:
        description: 'The name of this organization.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      contact:
        description: 'The contact information for this organization'
        type: string
        format: url
        maxLength: 255
      style: []
    required:
      - rsin
      - chamberOfComerce
      - name
  Style-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this style.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this style.'
        type: string
        example: 'This page holds info about this style'
        maxLength: 255
      css: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      favicon: []
      organizations: []
    required:
      - name
      - description
  Style-write:
    properties:
      name:
        description: 'The name of this style.'
        type: string
        example: About
        maxLength: 255
      description:
        description: 'The description of this style.'
        type: string
        example: 'This page holds info about this style'
        maxLength: 255
      css: []
      favicon: []
      organizations: []
    required:
      - name
      - description
  Image-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this image'
        type: string
        example: Flowers
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      alt:
        description: 'The alt of of this image for people with poor eyesight'
        type: string
        example: flowers
        maxLength: 255
      href:
        description: 'The href of this image'
        type: string
        example: app_img_flowers
        maxLength: 255
      base64: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      organization: []
    required:
      - name
      - description
  Image-write:
    properties:
      name:
        description: 'The name of this image'
        type: string
        example: Flowers
        maxLength: 255
      description:
        description: 'The description of this organisation.'
        type: string
        example: 'This is the manucipality of Utrecht'
        maxLength: 255
      alt:
        description: 'The alt of of this image for people with poor eyesight'
        type: string
        example: flowers
        maxLength: 255
      href:
        description: 'The href of this image'
        type: string
        example: app_img_flowers
        maxLength: 255
      base64: []
      organization: []
    required:
      - name
      - description
  Configuration-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      configuration: []
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      application: []
    required:
      - name
      - description
  Configuration-write:
    properties:
      name:
        description: 'The name of this application.'
        type: string
        example: Webshop
        maxLength: 255
      description:
        description: 'The description of this application.'
        type: string
        example: 'Is the best site ever'
        maxLength: 255
      configuration: []
      application: []
      organization: []
    required:
      - name
      - description
      - organization
  Slug-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The internal name of this slug.'
        type: string
        example: 'About page for website'
        maxLength: 255
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
        example: about
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      application: []
      template: []
    required:
      - name
      - slug
  Slug-write:
    properties:
      name:
        description: 'The internal name of this slug.'
        type: string
        example: 'About page for website'
        maxLength: 255
      slug:
        description: 'The actual slug of this slug without a pre / e.g. about not about'
        type: string
        example: about
        maxLength: 255
      application: []
      template: []
    required:
      - name
      - slug
  Template-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      title:
        description: 'The external name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      content:
        description: 'The Content of this template.'
        type: string
        example: 'A lot of random info over any topic'
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
        example: twig
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      slugs: []
      organization: []
      templateGroups: []
    required:
      - name
      - description
      - content
      - templateEngine
  Template-write:
    properties:
      name:
        description: 'The internal name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      title:
        description: 'The external name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      content:
        description: 'The Content of this template.'
        type: string
        example: 'A lot of random info over any topic'
      templateEngine:
        description: 'The template engine used to render this template. Schould be either twig (Twig), md (Markdown) or rst (reStructuredText)'
        type: string
        example: twig
      slugs: []
      organization: []
      templateGroups: []
    required:
      - name
      - description
      - content
      - templateEngine
  TemplateGroup-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The internal name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      application: []
      organization: []
    required:
      - name
      - description
  TemplateGroup-write:
    properties:
      name:
        description: 'The internal name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      templates: []
      application: []
      organization: []
    required:
      - name
      - description
  Menu-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this menuItems'
        type: string
        example: 'This menuItems links to the about page'
        maxLength: 2555
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      menuItems: []
      application: []
    required:
      - name
      - application
  Menu-write:
    properties:
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this menuItems'
        type: string
        example: 'This menuItems links to the about page'
        maxLength: 2555
      menuItems: []
      application: []
    required:
      - name
      - application
  MenuItem-read:
    properties:
      id:
        description: 'The UUID identifier of this resource'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this MenuItem'
        type: string
        example: about-menu-link
        maxLength: 255
      description:
        description: 'The description of this MenuItem'
        type: string
        example: 'This MenuItem links to the about page'
        maxLength: 2555
      order:
        description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
        type: int
        example: '1'
        maxLength: 3
      icon:
        description: 'the icon to display with this menu item'
        type: string
        example: 'fa fa-cart'
        maxLength: 255
      type:
        description: 'the type of the menu item'
        type: string
        example: slug
        maxLength: 255
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
        example: app_home_about
        maxLength: 2555
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
    required:
      - name
      - order
      - href
  MenuItem-write:
    properties:
      name:
        description: 'The name of this MenuItem'
        type: string
        example: about-menu-link
        maxLength: 255
      description:
        description: 'The description of this MenuItem'
        type: string
        example: 'This MenuItem links to the about page'
        maxLength: 2555
      order:
        description: 'The order in wichs this menu item is shown in relation to other items of the same menu'
        type: int
        example: '1'
        maxLength: 3
      icon:
        description: 'the icon to display with this menu item'
        type: string
        example: 'fa fa-cart'
        maxLength: 255
      type:
        description: 'the type of the menu item'
        type: string
        example: slug
        maxLength: 255
      href:
        description: 'The href of this MenuItem that links to another page'
        type: string
        example: app_home_about
        maxLength: 2555
      menu: []
    required:
      - name
      - order
      - href
      - menu
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-09-29 15:22:14'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-09-29 15:22:14'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-09-29 15:22:14'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-09-29 15:22:14'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  LoginLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      address:
        description: 'The ip address of the login'
        type: string
        example: 12.12.12.123
        maxLength: 50
      method:
        description: 'The method of the login'
        type: string
        example: facebook
        maxLength: 255
      status:
        description: 'the status code of the login'
        type: string
        example: '200'
        maxLength: 3
      dateCreated:
        description: 'The moment this login was made'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this login was updated'
        type: \DateTime
        example: '20190101'
    required:
      - address
      - method
      - status
  LoginLog-write:
    properties:
      address:
        description: 'The ip address of the login'
        type: string
        example: 12.12.12.123
        maxLength: 50
      method:
        description: 'The method of the login'
        type: string
        example: facebook
        maxLength: 255
      status:
        description: 'the status code of the login'
        type: string
        example: '200'
        maxLength: 3
    required:
      - address
      - method
      - status
tags:
  -
    name: Application
    description: |
      Application is the project of a website.
      
      
  -
    name: Organization
    description: |
      An organization as active on commonground.
      
      
  -
    name: Style
    description: |
      Your style provides ccs and a favicon for an organisation.
      
      
  -
    name: Image
    description: |
      Image speaks for itself.
      
      
  -
    name: Configuration
    description: |
      Configurations hold a specific organisation configruation for an application.
      
      
  -
    name: Slug
    description: |
      Your slug connects your application with your pages.
      
      
  -
    name: Template
    description: |
      Templates holds information your pages or include in messages.
      
      
  -
    name: TemplateGroup
    description: |
      Groups are a way of orginzing templates.
      
      
  -
    name: Menu
    description: |
      Menu is your way of navigation inside your application.
      
      
  -
    name: MenuItem
    description: |
      MenuItem is a part of a menu and can be a link or submenu.
      
      
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: LoginLog
    description: |
      An entity representing an login log.
      
      This entity logs all the login attempts
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the LoginLog resource'
      write: 'write right to the LoginLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the LoginLog resource'
      write: 'write right to the LoginLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: huwelijksplanner.online
    url: wrc.dev.huwelijksplanner.online
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
